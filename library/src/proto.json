{
  "nested": {
    "libdrynx": {
      "nested": {
        "CipherVector": {
          "fields": {
            "content": {
              "rule": "repeated",
              "type": "CipherText",
              "id": 1
            }
          }
        },
        "CipherText": {
          "fields": {
            "k": {
              "type": "bytes",
              "id": 1
            },
            "c": {
              "type": "bytes",
              "id": 2
            }
          }
        },
        "ServerIdentityList": {
          "fields": {
            "content": {
              "rule": "repeated",
              "type": "network.ServerIdentity",
              "id": 1
            }
          }
        },
        "SurveyQuery": {
          "fields": {
            "surveyid": {
              "type": "string",
              "id": 1
            },
            "query": {
              "type": "Query",
              "id": 2
            },
            "rosterservers": {
              "type": "onet.Roster",
              "id": 3
            },
            "servertodp": {
              "keyType": "string",
              "type": "ServerIdentityList",
              "id": 4
            },
            "idtopublic": {
              "keyType": "string",
              "type": "bytes",
              "id": 5
            },
            "clientpubkey": {
              "type": "bytes",
              "id": 6
            },
            "intramessage": {
              "type": "bool",
              "id": 7
            },
            "threshold": {
              "type": "double",
              "id": 8
            },
            "aggregationproofthreshold": {
              "type": "double",
              "id": 9
            },
            "obfuscationproofthreshold": {
              "type": "double",
              "id": 10
            },
            "rangeproofthreshold": {
              "type": "double",
              "id": 11
            },
            "keyswitchingproofthreshold": {
              "type": "double",
              "id": 12
            }
          }
        },
        "ResponseDP": {
          "fields": {
            "data": {
              "keyType": "string",
              "type": "CipherVector",
              "id": 1
            }
          }
        },
        "PublishSignatureBytes": {
          "fields": {
            "public": {
              "type": "bytes",
              "id": 1
            },
            "signature": {
              "type": "bytes",
              "id": 2
            }
          }
        },
        "QueryDiffP": {
          "fields": {
            "lapmean": {
              "type": "double",
              "id": 1
            },
            "lapscale": {
              "type": "double",
              "id": 2
            },
            "noiselistsize": {
              "type": "sint32",
              "id": 3
            },
            "quanta": {
              "type": "double",
              "id": 4
            },
            "scale": {
              "type": "double",
              "id": 5
            },
            "limit": {
              "type": "double",
              "id": 6
            }
          }
        },
        "PublishSignatureBytesList": {
          "fields": {
            "content": {
              "rule": "repeated",
              "type": "PublishSignatureBytes",
              "id": 1
            }
          }
        },
        "QueryIVSigs": {
          "fields": {
            "inputvalidationsigs": {
              "rule": "repeated",
              "type": "PublishSignatureBytesList",
              "id": 1
            }
          }
        },
        "Int64List": {
          "fields": {
            "content": {
              "rule": "repeated",
              "type": "sint64",
              "id": 1
            }
          }
        },
        "Query": {
          "fields": {
            "operation": {
              "type": "Operation",
              "id": 1
            },
            "ranges": {
              "rule": "repeated",
              "type": "Int64List",
              "id": 2
            },
            "proofs": {
              "type": "sint32",
              "id": 3
            },
            "obfuscation": {
              "type": "bool",
              "id": 4
            },
            "diffp": {
              "type": "QueryDiffP",
              "id": 5
            },
            "ivsigs": {
              "type": "QueryIVSigs",
              "id": 6
            },
            "rostervns": {
              "type": "onet.Roster",
              "id": 7
            },
            "cuttingfactor": {
              "type": "sint32",
              "id": 8
            },
            "selector": {
              "rule": "repeated",
              "type": "string",
              "id": 9
            }
          }
        },
        "Operation": {
          "fields": {
            "nameop": {
              "type": "string",
              "id": 1
            },
            "nbrinput": {
              "type": "sint32",
              "id": 2
            },
            "nbroutput": {
              "type": "sint32",
              "id": 3
            },
            "querymin": {
              "type": "sint64",
              "id": 4
            },
            "querymax": {
              "type": "sint64",
              "id": 5
            },
            "lrparameters": {
              "type": "LogisticRegressionParameters",
              "id": 6
            }
          }
        },
        "LogisticRegressionParameters": {
          "fields": {
            "datasetname": {
              "type": "string",
              "id": 1
            },
            "filepath": {
              "type": "string",
              "id": 2
            },
            "nbrrecords": {
              "type": "sint64",
              "id": 3
            },
            "nbrfeatures": {
              "type": "sint64",
              "id": 4
            },
            "means": {
              "rule": "repeated",
              "type": "double",
              "id": 5,
              "options": {
                "packed": false
              }
            },
            "standarddeviations": {
              "rule": "repeated",
              "type": "double",
              "id": 6,
              "options": {
                "packed": false
              }
            },
            "lambda": {
              "type": "double",
              "id": 7
            },
            "step": {
              "type": "double",
              "id": 8
            },
            "maxiterations": {
              "type": "sint32",
              "id": 9
            },
            "initialweights": {
              "rule": "repeated",
              "type": "double",
              "id": 10,
              "options": {
                "packed": false
              }
            },
            "k": {
              "type": "sint32",
              "id": 11
            },
            "precisionapproxcoefficients": {
              "type": "double",
              "id": 12
            }
          }
        }
      }
    },
    "network": {
      "options": {
        "java_package": "ch.epfl.dedis.lib.proto",
        "java_outer_classname": "NetworkProto"
      },
      "nested": {
        "ServerIdentity": {
          "fields": {
            "public": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "serviceIdentities": {
              "rule": "repeated",
              "type": "ServiceIdentity",
              "id": 2
            },
            "id": {
              "rule": "required",
              "type": "bytes",
              "id": 3
            },
            "address": {
              "rule": "required",
              "type": "string",
              "id": 4
            },
            "description": {
              "rule": "required",
              "type": "string",
              "id": 5
            },
            "url": {
              "type": "string",
              "id": 7
            }
          }
        },
        "ServiceIdentity": {
          "fields": {
            "name": {
              "rule": "required",
              "type": "string",
              "id": 1
            },
            "suite": {
              "rule": "required",
              "type": "string",
              "id": 2
            },
            "public": {
              "rule": "required",
              "type": "bytes",
              "id": 3
            }
          }
        }
      }
    },
    "onet": {
      "options": {
        "java_package": "ch.epfl.dedis.lib.proto",
        "java_outer_classname": "OnetProto"
      },
      "nested": {
        "Roster": {
          "fields": {
            "id": {
              "type": "bytes",
              "id": 1
            },
            "list": {
              "rule": "repeated",
              "type": "network.ServerIdentity",
              "id": 2
            },
            "aggregate": {
              "rule": "required",
              "type": "bytes",
              "id": 3
            }
          }
        },
        "Status": {
          "fields": {
            "field": {
              "keyType": "string",
              "type": "string",
              "id": 1
            }
          }
        }
      }
    },
    "skipchain": {
      "options": {
        "java_package": "ch.epfl.dedis.lib.proto",
        "java_outer_classname": "SkipchainProto"
      },
      "nested": {
        "StoreSkipBlock": {
          "fields": {
            "targetSkipChainID": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "newBlock": {
              "rule": "required",
              "type": "SkipBlock",
              "id": 2
            },
            "signature": {
              "type": "bytes",
              "id": 3
            }
          }
        },
        "StoreSkipBlockReply": {
          "fields": {
            "previous": {
              "type": "SkipBlock",
              "id": 1
            },
            "latest": {
              "rule": "required",
              "type": "SkipBlock",
              "id": 2
            }
          }
        },
        "GetAllSkipChainIDs": {
          "fields": {}
        },
        "GetAllSkipChainIDsReply": {
          "fields": {
            "skipChainIDs": {
              "rule": "repeated",
              "type": "bytes",
              "id": 1
            }
          }
        },
        "GetSingleBlock": {
          "fields": {
            "id": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            }
          }
        },
        "GetSingleBlockByIndex": {
          "fields": {
            "genesis": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "index": {
              "rule": "required",
              "type": "sint32",
              "id": 2
            }
          }
        },
        "GetSingleBlockByIndexReply": {
          "fields": {
            "skipblock": {
              "rule": "required",
              "type": "SkipBlock",
              "id": 1
            },
            "links": {
              "rule": "repeated",
              "type": "ForwardLink",
              "id": 2
            }
          }
        },
        "GetUpdateChain": {
          "fields": {
            "latestID": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            }
          }
        },
        "GetUpdateChainReply": {
          "fields": {
            "update": {
              "rule": "repeated",
              "type": "SkipBlock",
              "id": 1
            }
          }
        },
        "SkipBlock": {
          "fields": {
            "index": {
              "rule": "required",
              "type": "sint32",
              "id": 1
            },
            "height": {
              "rule": "required",
              "type": "sint32",
              "id": 2
            },
            "maxHeight": {
              "rule": "required",
              "type": "sint32",
              "id": 3
            },
            "baseHeight": {
              "rule": "required",
              "type": "sint32",
              "id": 4
            },
            "backlinks": {
              "rule": "repeated",
              "type": "bytes",
              "id": 5
            },
            "verifiers": {
              "rule": "repeated",
              "type": "bytes",
              "id": 6
            },
            "genesis": {
              "rule": "required",
              "type": "bytes",
              "id": 7
            },
            "data": {
              "rule": "required",
              "type": "bytes",
              "id": 8
            },
            "roster": {
              "rule": "required",
              "type": "onet.Roster",
              "id": 9
            },
            "hash": {
              "rule": "required",
              "type": "bytes",
              "id": 10
            },
            "forward": {
              "rule": "repeated",
              "type": "ForwardLink",
              "id": 11
            },
            "payload": {
              "type": "bytes",
              "id": 12
            },
            "signatureScheme": {
              "type": "uint32",
              "id": 13
            }
          }
        },
        "ForwardLink": {
          "fields": {
            "from": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "to": {
              "rule": "required",
              "type": "bytes",
              "id": 2
            },
            "newRoster": {
              "type": "onet.Roster",
              "id": 3
            },
            "signature": {
              "rule": "required",
              "type": "ByzcoinSig",
              "id": 4
            }
          }
        },
        "ByzcoinSig": {
          "fields": {
            "msg": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "sig": {
              "rule": "required",
              "type": "bytes",
              "id": 2
            }
          }
        },
        "SchnorrSig": {
          "fields": {
            "challenge": {
              "rule": "required",
              "type": "bytes",
              "id": 1
            },
            "response": {
              "rule": "required",
              "type": "bytes",
              "id": 2
            }
          }
        },
        "Exception": {
          "fields": {
            "index": {
              "rule": "required",
              "type": "sint32",
              "id": 1
            },
            "commitment": {
              "rule": "required",
              "type": "bytes",
              "id": 2
            }
          }
        }
      }
    }
  }
}